(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{168:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"multiplayer-gameplay-synchronization-buffers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiplayer-gameplay-synchronization-buffers","aria-hidden":"true"}},[t._v("#")]),t._v(" Multiplayer Gameplay (Synchronization,-Buffers)")]),t._v(" "),s("p",[t._v("Finally we can start to develop the actual multiplayer part of our game.\nBefore we start spawning players on our server we first have to lay out a simple system on how the player and the server will be exchanging information. We will use this basic scheme:")]),t._v(" "),s("ul",[s("li",[t._v("Once the client loaded the Game scene it will send a GameJoinRequest to the server(An empty message)")]),t._v(" "),s("li",[t._v("The Server will respond with information about the current room (All spawned players and their states)")]),t._v(" "),s("li",[t._v("From that point of the server will send information every frame to the client. The following information types exist:\n"),s("ul",[s("li",[t._v("PlayerSpawnData (Whenever a new player joined we send that information to all connected clients)")]),t._v(" "),s("li",[t._v("PlayerUpdateData (We have already implemented this one)")]),t._v(" "),s("li",[t._v("PlayerDespawnData( Opposite of PlayerSpawnData, tells the client to delete a player)")])])]),t._v(" "),s("li",[t._v("The client sends also inputs every frame to the server(We have already done that)")])]),t._v(" "),s("p",[t._v("So lets add these to our Networking Data script:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" PlayerSpawnData "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IDarkRiftSerializable\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),t._v(" Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" Name"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Vector3")]),t._v(" Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("PlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Vector3")]),t._v(" position"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Id "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Position "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" position"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("DeserializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Id "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadUInt16")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadString")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        Position "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Vector3")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadSingle")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadSingle")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadSingle")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Serialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("SerializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" PlayerDespawnData "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IDarkRiftSerializable\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),t._v(" Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("PlayerDespawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Id "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("DeserializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Id "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadUInt16")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Serialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("SerializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" GameUpdateData "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IDarkRiftSerializable\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" Frame"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" SpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" PlayerDespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" DespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" PlayerUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" UpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("GameUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" frame"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PlayerUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" spawns"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PlayerDespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" despawns"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Frame "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" frame"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        UpdateData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        DespawnData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" despawns"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        SpawnData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" spawns"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("DeserializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Frame "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadUInt32")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        SpawnData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("ReadSerializables")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        DespawnData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("ReadSerializables")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerDespawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        UpdateData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("ReadSerializables")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Serialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("SerializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Frame"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("And also the struct containing the start information:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" GameStartData "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IDarkRiftSerializable\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" OnJoinServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Players"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("GameStartData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" players"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" servertick"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Players "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" players"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        OnJoinServerTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" servertick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("DeserializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        OnJoinServerTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ReadUInt32")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Players "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reader"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("ReadSerializables")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Serialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("SerializeEvent")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OnJoinServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Writer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Write")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Players"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Also add some Tags:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    GameJoinRequest "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("200")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GameStartDataResponse "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("201")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GameUpdate "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("202")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("Now let's create a script that talks to server once the Game scene is loaded.")]),t._v(" "),s("ul",[s("li",[t._v("Create a GameManager script in the Scripts folder")]),t._v(" "),s("li",[t._v('Create an empty gameobject name it "GameManager".')]),t._v(" "),s("li",[t._v("Add the GameManager script to that gameobject.")]),t._v(" "),s("li",[t._v("Drag the Player gameobject in the Prefabs, then delete it in the Scene")])]),t._v(" "),s("p",[t._v("Open The GameManager script and add some variables:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("GameManager")]),t._v(" Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Header")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"References"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("GameObject")]),t._v(" PlayerPrefab"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Header")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Public Fields"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" ClientTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" LastRecievedServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Dictionary"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ClientPlayer"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" players "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Dictionary")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ClientPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("ClientTick is the frame number that the client is actually simulating with FixedUpdate, which is also it's input tick, it will be important later. LastRecievedServerTick is the tick of the last message received from the server. The Dictionary will be used to keep track of players.")]),t._v(" "),s("p",[t._v("Next we want to send a message to the server in Start() and we want to receive messages and process them:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("  "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Awake")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Instance "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Start")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MessageReceived "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" OnMessage"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Message"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("CreateEmpty")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameJoinRequest"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SendMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SendMode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reliable"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("OnDestroy")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MessageReceived "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" OnMessage"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("OnMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("object")]),t._v(" sender"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("MessageReceivedEventArgs")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tag"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameStartDataResponse"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{attrs:{class:"token function"}},[t._v("OnGameJoinAccept")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameStartData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameUpdate"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{attrs:{class:"token function"}},[t._v("OnGameUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("OnGameJoinAccept")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameStartData")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        LastRecievedServerTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OnJoinServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        CurrentServerTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OnJoinServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),t._v(" ppd "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Players"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("SpawnPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppd"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("OnGameUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("SpawnPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),t._v(" ppd"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Delete the Start() function from the clientPlayer")]),t._v("\nand add:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("   "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Initialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Id "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PlayerId "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            IsOwn "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Camera"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SetParent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Camera"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localPosition "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Vector3")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Camera"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localRotation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Quaternion"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identity"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Interpolation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Vector3"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zero"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Quaternion"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identity"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("we will also add code to simulate enemies depending on server inputs:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    public void OnServerDataUpdate(PlayerUpdateData data)\n    {\n        if (IsOwn)\n        {\n            \n        }\n        else\n        {\n            Interpolation.SetFramePosition(data);\n        }\n    }\n")])])]),s("p",[t._v("(We use the part in IsOwn later for reconciliation)")]),t._v(" "),s("p",[t._v("We will initialize spawned players with this function. Our own player will get a camera Attached and we mark him as our own player.")]),t._v(" "),s("p",[t._v("In the Fixedupdate function put everything in a if(IsOwn){} bracket it should look like this:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("  "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("FixedUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IsOwn"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("inputs "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("W"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("S"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Space"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetMouseButton")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            yaw "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetAxis")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Mouse X"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" SensitivityX"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            pitch "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetAxis")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Mouse Y"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" SensitivityY"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("Quaternion")]),t._v(" rot "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Quaternion"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Euler")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pitch"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yaw"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),t._v(" inputData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rot"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GameManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastRecievedServerTick"),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Interpolation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),t._v(" updateData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Logic"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetNextFrameData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputData"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Interpolation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Interpolation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SetFramePosition")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Message"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Create")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GamePlayerInput"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SendMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SendMode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reliable"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Now we can fill in the SpawnPlayer function in the GameManager:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("SpawnPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),t._v(" ppd"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token class-name"}},[t._v("GameObject")]),t._v(" go "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Instantiate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PlayerPrefab"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token class-name"}},[t._v("ClientPlayer")]),t._v(" player "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" go"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("GetComponent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("ClientPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Initialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppd"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ppd"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        players"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" player"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Now there is still the OnGameUpdate function left. this function is called whenever we receive a GameUpdateData from the server. We could just execute all events in that data like spawning players or moving them as soon as we receive a message but if we do that we run into another problem...")]),t._v(" "),s("h3",{attrs:{id:"buffers-for-game-networking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffers-for-game-networking","aria-hidden":"true"}},[t._v("#")]),t._v(" Buffers for Game Networking")]),t._v(" "),s("p",[t._v("Lets assume we have a server and a client both running at 50 frames per second so they run a Tick every 20 ms. The server will send a message every Tick and the client will receive a message and perform some actions. On a time line this would look like this:")]),t._v(" "),s("p",[t._v("(messages have a constant delay of 15 ms)")]),t._v(" "),s("ul",[s("li",[t._v("0 ms: Server sends message 0 to client, client received no messages so waits")]),t._v(" "),s("li",[t._v("15 ms: Client receives message 0 and will perform actions in the next frame")]),t._v(" "),s("li",[t._v("20 ms: Server sends 1, client performs 0")]),t._v(" "),s("li",[t._v("35 ms: client receives 1")]),t._v(" "),s("li",[t._v("40 ms server sends 2, client performs 1\n......")])]),t._v(" "),s("p",[t._v("works fine so far but in reality sending messages will not have a constant delay so let's look at another example.")]),t._v(" "),s("p",[t._v("(messages have a delay of 15-30 ms)")]),t._v(" "),s("ul",[s("li",[t._v("0 ms: server sends 0(with delay 17 ms), client performs nothing")]),t._v(" "),s("li",[t._v("17 ms: client receives 0")]),t._v(" "),s("li",[t._v("20 ms: server sends 1(with delay 28 ms), client performs 0")]),t._v(" "),s("li",[t._v("40 ms: server sends 2(with delay 16 ms), client performs nothing(has received nothing)")]),t._v(" "),s("li",[t._v("48 ms: client receives 1")]),t._v(" "),s("li",[t._v("56 ms: client receives 2")]),t._v(" "),s("li",[t._v("60 ms: server sends 3(with delay 25 ms), client performs ??? maybe just 1 and store 2 or both or just 2 and discard 1 or  what.....")])]),t._v(" "),s("p",[t._v("This leads to jitter (Players bouncing forward and backwards or jumping small distances) or even worse it could lead to spells being not casted if you discard messages. So how can we handle that problem. How it's done differs from game to game, we will use a very basic approach with the idea of fulfilling the following requirements:")]),t._v(" "),s("ul",[s("li",[t._v("When we send a message from the server we will receive it no matter what")]),t._v(" "),s("li",[t._v("Messages arrive always in a sorted order")]),t._v(" "),s("li",[t._v("No jittering -> We (almost)always want to perform 1 message per frame")]),t._v(" "),s("li",[t._v("No discarding -> We want to perform every message")])]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v('One could argue that these are bad requirements for an FPS. For instance we could do movement completely fine with unordered and unreliable(not all messages arrive) messages, because leaving out a movement update would barely make a difference and interpolation would smooth it out. I will add a section "Networking Discussion" at the end of this tutorial where I go further into details like this.')])]),t._v(" "),s("p",[t._v("Luckily the TCP protcol delivers reliable and sorted messages(on the cost of performance and additional delay in the case of bad connections) so we only have to solve the jittering and discarding problem.")]),t._v(" "),s("p",[t._v("Since this is a problem that each game has to face there exists a solution to it already. It's called a buffer or dejitter buffer. A buffer stores the elements it receives for a short time in a list and allows us to pull an element out each frame. Create a new Buffer script in Scripts/shared and fill it with the following code:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" System"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Collections"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Generic"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Buffer")]),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Size "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Queue"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" bufferState"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxElementsPerGet"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Buffer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" bufferSize"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxElementsPerGet"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        elements "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Queue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        bufferState "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("bufferSize"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxElementsPerGet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" maxElementsPerGet"),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),t._v(" element"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Enqueue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" T"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Get")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bufferState "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            bufferState"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            bufferState"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bufferState "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Dequeue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" amountToGet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bufferState "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxElementsPerGet "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" maxElementsPerGet "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bufferState"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        amountToGet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountToGet "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" amountToGet"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        bufferState "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        T"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" val "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("T")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("amountToGet"),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountToGet"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("--")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            val"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" elements"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Dequeue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This is probably the cleanest piece of code, you will find in this entire tutorial....")]),t._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("the Get() still generates garbage which you should avoid as much as possible in generic classes like this. You should pass an array as parameter into the function and return it if you want better performance.")])]),t._v(" "),s("p",[t._v("So how does it work. First the constructor takes 2 parameters. bufferSize is the ideal size that the buffer should have, the buffer will try to always keep that many elements in it. If we increase this value we add delay to the execution of messages but reduce the chance of getting jitter. By how much exactly? increasing bufferSize by one will add a delay of FixedDeltaTime (in our case 25 ms because we have 40 FixedUpdates per second) but will also allow the ping of the player to bounce between twice that amount.")]),t._v(" "),s("p",[t._v("For Instance if we take a buffer with size, 3 a player would have 75 ms more delay but he could still play fine without jitter even if his ping spikes between 30 ms and 130 ms (130-30 < 75*20). Now we have to decide on a bufferSize for our game. We will go for 1 (add a delay of 25 ms but allow the ping to vary up to 50 ms.)")]),t._v(" "),s("p",[t._v("Lets add a buffer to our GameManager:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    private Buffer<GameUpdateData> gameUpdateBuffer = new Buffer<GameUpdateData>(1, 2);\n")])])]),s("p",[t._v("and change the OnGameUpdate function to:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("OnGameUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        gameUpdateBuffer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Now in FixedUpdate we pull objects from the buffer and process them:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("  "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("FixedUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ClientTick"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        GameUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" datas "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" gameUpdateBuffer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Get")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),t._v(" data "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" datas"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("PerformGameUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("PerformGameUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        LastRecievedServerTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Frame"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),t._v(" data "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" GlobalManager"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PlayerId"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{attrs:{class:"token function"}},[t._v("SpawnPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerDespawnData")]),t._v(" data "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("players"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ContainsKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{attrs:{class:"token function"}},[t._v("Destroy")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("players"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gameObject"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                players"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),t._v(" data "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" updateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("ClientPlayer")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("players"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("TryGetValue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("out")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("OnServerDataUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The client is now ready for multiplayer gameplay.\nSo let's swap to the server and:")]),t._v(" "),s("ul",[s("li",[t._v('Create a new GameObject and name it "Player"')]),t._v(" "),s("li",[t._v("Add a CharacterController to it and set the height to 0")]),t._v(" "),s("li",[t._v("Add the PlayerLogic script as a component to it")]),t._v(" "),s("li",[t._v("In the PlayerLogic component set WalkSpeed = 8, GravityConstant = 2, JumpStrength = 11 (same values as on the client)")]),t._v(" "),s("li",[t._v("Create a ServerPlayer script in the Scripts folder.")]),t._v(" "),s("li",[t._v("Drag the Player GameObject into the prefabs folder and delete it from the scene.")])]),t._v(" "),s("p",[t._v("Our Room script should store and interact with ServerPlayers so open it and add the following to the Public Fields variables:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" List"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("ServerPlayer"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" ServerPlayers "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("List")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" ServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("We will also need a reference to the player prefab to spawn it:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('    [Header("Prefabs")]\n    public GameObject PlayerPrefab;\n')])])]),s("p",[t._v("Finally add Lists to store the room state:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    public PlayerUpdateData[] UpdateDatas = new PlayerUpdateData[0];\n    private List<PlayerSpawnData> spawnDatas = new List<PlayerSpawnData>(4);\n    private List<PlayerDespawnData> despawnDatas = new List<PlayerDespawnData>(4);\n")])])]),s("p",[t._v("Now lets create a function to react on a GameJoinRequest from a client:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("   "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("JoinPlayerToGame")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("ClientConnection")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token class-name"}},[t._v("GameObject")]),t._v(" go "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Instantiate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PlayerPrefab"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),t._v(" player "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" go"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("GetComponent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Initialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vector3"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zero"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        spawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetPlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This will create a player and initialize it, but we still have to write that initialize function but first we will also add a ServerPlayer field to our ClientConnection. Open the ClientConnection script and add to the Public Fields:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),t._v(" Player"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Then open the ServerPlayer script and add the following:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("  "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Header")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Public Fields"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ClientConnection")]),t._v(" ClientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Room")]),t._v(" Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("uint")]),t._v(" InputTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Header")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"References"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerLogic")]),t._v(" Logic"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("IClient")]),t._v(" Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),t._v(" CurrentUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Buffer"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("PlayerInputData"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" inputBuffer "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Buffer")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Initialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Vector3")]),t._v(" position"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ClientConnection")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ClientConnection "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Room "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Client "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ClientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Player "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateDatas "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        CurrentUpdateData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Vector3"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zero"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Quaternion"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identity"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        InputTick "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" datas "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token class-name"}},[t._v("Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),t._v(" p "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            datas"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetPlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Message"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Create")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameStartDataResponse"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("GameStartData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("datas"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SendMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SendMode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reliable"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("The Initialize function we created does first assign a lot of references for later use and then generates a GameStartData out of the information from our Room and sends it back as GameStartDataResponse. After that point the client will be an official player on the server and can be seen and attacked by enemies.")]),t._v(" "),s("p",[t._v("So let's add a bit of logic to the ServerPlayer:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("RecieveInput")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),t._v(" input"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        inputBuffer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("PerformUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      PlayerInputData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" inputs "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputBuffer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Get")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),t._v(" input "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("First")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            InputTick"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                InputTick"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keyinputs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keyinputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keyinputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keyinputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                input"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LookDirection "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputs"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LookDirection"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            CurrentUpdateData "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Logic"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("GetNextFrameData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n        transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localPosition "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Position"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localRotation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LookDirection"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentUpdateData"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("GetPlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerSpawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ClientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transform"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localPosition"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("ReceiveInput will just add inputs from the client to the input buffer of the server player(We need a buffer on both sides we don't want the server to miss inputs too). GetPlayerSpawnData will be used to generate information for new players.")]),t._v(" "),s("p",[t._v("PerformUpdate Will read and input from the buffer and perform it and store a PlayerUpdateData in the room which will be used to generate GameUpdateDatas later.")]),t._v(" "),s("p",[t._v("Now can write the main game routine in the Room script:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("FixedUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ServerTick"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),t._v(" player "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("PerformUpdate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       "),s("span",{attrs:{class:"token comment"}},[t._v("//send update message to all players")]),t._v("\n\n        PlayerSpawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tpsd "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" spawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ToArray")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        PlayerDespawnData"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tpdd "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" despawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ToArray")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("ServerPlayer")]),t._v(" p "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Message"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Create")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("ushort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameUpdate"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("GameUpdateData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InputTick"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UpdateDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tpsd"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tpdd"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("SendMessage")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SendMode"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reliable"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("//clear values")]),t._v("\n        spawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Clear")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        despawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Clear")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("It's very simple, it just performs an update on each player and then sends each player the new room state and resets all data in the room at the end.")]),t._v(" "),s("p",[t._v("The last thing that is left to do is actually calling functions when we receive anything from the client, so open the ClientConnection script and add to the Switch these 2 cases:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("     "),s("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GameJoinRequest"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    Room"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("JoinPlayerToGame")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Tags"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GamePlayerInput"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    Player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("RecieveInput")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token generic-method"}},[s("span",{attrs:{class:"token function"}},[t._v("Deserialize")]),s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerInputData")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Finally assign all the references of the player prefab in the editor. Now our multiplayer game is playable, you can test it out by building and starting 2 clients and running around. You will see that the players get synchronized to each other and that they can collide with each other.")]),t._v(" "),s("p",[t._v("There is a small thing that we have to fix. The RemovePlayerFromRoom function in our room doesn't remove players from the game yet when we reconnect. So open the Room script and replace the function with:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("RemovePlayerFromRoom")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token class-name"}},[t._v("ClientConnection")]),t._v(" clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("Destroy")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Player"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gameObject"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        despawnDatas"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("PlayerDespawnData")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ClientConnections"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ServerPlayers"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("Remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Player"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        clientConnection"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Room "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This is almost everything that is needed to create a multiplayer game. There are still some things left to do though. Sometimes we have to correct the local player if he predicted something wrong, that process is called reconciliation and we will implement it in the next section.")])])}],!1,null,null,null);e.options.__file="multiplayer-gameplay.md";a.default=e.exports}}]);